function Piece.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
call PieceType.new 1
pop this 0
push argument 1
pop this 1
push pointer 0
return
function Piece.set 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Piece.isWhite 0
push argument 0
pop pointer 0
push this 1
not
return
function Piece.isBlack 0
push argument 0
pop pointer 0
push this 1
return
function Piece.isPawn 0
push argument 0
pop pointer 0
push this 0
call PieceType.isPawn 1
return
function Piece.isKing 0
push argument 0
pop pointer 0
push this 0
call PieceType.isKing 1
return
function Piece.canKill 2
push argument 0
pop pointer 0
push this 0
call PieceType.isPawn 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKill 6
return
goto IF_END0
label IF_FALSE0
push argument 3
push argument 1
sub
pop local 0
push argument 4
push argument 2
sub
pop local 1
push this 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 1
neg
eq
push local 0
push constant 1
eq
push local 0
push constant 1
neg
eq
or
and
return
goto IF_END1
label IF_FALSE1
push local 1
push constant 1
eq
push local 0
push constant 1
eq
push local 0
push constant 1
neg
eq
or
and
return
label IF_END1
label IF_END0
function Piece.canMoveOrKill 0
push argument 0
pop pointer 0
push this 0
call PieceType.isPawn 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKillPawn 6
return
label IF_FALSE0
push this 0
call PieceType.isRook 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKillRook 6
return
label IF_FALSE1
push this 0
call PieceType.isKnight 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
call Piece.canMoveOrKillKnight 5
return
label IF_FALSE2
push this 0
call PieceType.isBishop 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKillBishop 6
return
label IF_FALSE3
push this 0
call PieceType.isQueen 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKillQueen 6
return
label IF_FALSE4
push this 0
call PieceType.isKing 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
call Piece.canMoveOrKillKing 5
return
label IF_FALSE5
push constant 0
return
function Piece.canMoveOrKillPawn 4
push argument 0
pop pointer 0
push this 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push constant 7
eq
pop local 0
push local 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 4
push argument 2
push constant 2
sub
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 3
push argument 5
add
pop pointer 1
push that 0
pop local 2
push argument 4
push local 2
add
pop pointer 1
push that 0
pop local 3
push argument 3
push argument 1
eq
push local 3
push constant 0
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 2
push constant 1
sub
pop local 1
push argument 1
push argument 5
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 3
push constant 0
eq
return
label IF_FALSE3
push constant 0
return
label IF_FALSE2
push argument 4
push argument 2
push constant 1
sub
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 3
push argument 5
add
pop pointer 1
push that 0
pop local 2
push argument 4
push local 2
add
pop pointer 1
push that 0
pop local 3
push argument 3
push argument 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 3
push constant 0
eq
return
goto IF_END5
label IF_FALSE5
push argument 3
push argument 1
push constant 1
sub
eq
push argument 3
push argument 1
push constant 1
add
eq
or
push local 3
push constant 0
eq
not
and
return
label IF_END5
label IF_FALSE4
push constant 0
return
goto IF_END1
label IF_FALSE1
push argument 4
push argument 2
push constant 1
sub
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 3
push argument 5
add
pop pointer 1
push that 0
pop local 2
push argument 4
push local 2
add
pop pointer 1
push that 0
pop local 3
push argument 3
push argument 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 3
push constant 0
eq
return
goto IF_END7
label IF_FALSE7
push argument 3
push argument 1
push constant 1
sub
eq
push argument 3
push argument 1
push constant 1
add
eq
or
push local 3
push constant 0
eq
not
and
return
label IF_END7
label IF_FALSE6
push constant 0
return
label IF_END1
goto IF_END0
label IF_FALSE0
push argument 2
push constant 2
eq
pop local 0
push local 0
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 4
push argument 2
push constant 2
add
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push argument 3
push argument 5
add
pop pointer 1
push that 0
pop local 2
push argument 4
push local 2
add
pop pointer 1
push that 0
pop local 3
push argument 3
push argument 1
eq
push local 3
push constant 0
eq
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push argument 2
push constant 1
add
pop local 1
push argument 1
push argument 5
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 3
push constant 0
eq
return
label IF_FALSE10
push constant 0
return
label IF_FALSE9
push argument 4
push argument 2
push constant 1
add
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push argument 3
push argument 5
add
pop pointer 1
push that 0
pop local 2
push argument 4
push local 2
add
pop pointer 1
push that 0
pop local 3
push argument 3
push argument 1
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 3
push constant 0
eq
return
goto IF_END12
label IF_FALSE12
push argument 3
push argument 1
push constant 1
sub
eq
push argument 3
push argument 1
push constant 1
add
eq
or
push local 3
push constant 0
eq
not
and
return
label IF_END12
label IF_FALSE11
push constant 0
return
goto IF_END8
label IF_FALSE8
push argument 4
push argument 2
push constant 1
add
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push argument 3
push argument 5
add
pop pointer 1
push that 0
pop local 2
push argument 4
push local 2
add
pop pointer 1
push that 0
pop local 3
push argument 3
push argument 1
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 3
push constant 0
eq
return
goto IF_END14
label IF_FALSE14
push argument 3
push argument 1
push constant 1
sub
eq
push argument 3
push argument 1
push constant 1
add
eq
or
push local 3
push constant 0
eq
not
and
return
label IF_END14
label IF_FALSE13
push constant 0
return
label IF_END8
label IF_END0
function Piece.canMoveOrKillRook 6
push argument 0
pop pointer 0
push argument 3
push argument 1
sub
pop local 0
push argument 4
push argument 2
sub
pop local 1
push local 0
push constant 0
eq
push local 1
push constant 0
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 2
push constant 1
add
pop local 3
goto IF_END1
label IF_FALSE1
push argument 2
push constant 1
sub
pop local 3
label IF_END1
label WHILE_EXP0
push local 3
push argument 4
eq
not
not
if-goto WHILE_END0
push argument 1
push argument 5
add
pop pointer 1
push that 0
pop local 4
push local 3
push local 4
add
pop pointer 1
push that 0
pop local 5
push local 5
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push local 1
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 3
push constant 1
add
pop local 3
goto IF_END3
label IF_FALSE3
push local 3
push constant 1
sub
pop local 3
label IF_END3
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
label IF_FALSE0
push local 0
push constant 0
eq
not
push local 1
push constant 0
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
push constant 1
add
pop local 2
goto IF_END5
label IF_FALSE5
push argument 1
push constant 1
sub
pop local 2
label IF_END5
label WHILE_EXP1
push local 2
push argument 3
eq
not
not
if-goto WHILE_END1
push local 2
push argument 5
add
pop pointer 1
push that 0
pop local 4
push argument 2
push local 4
add
pop pointer 1
push that 0
pop local 5
push local 5
push constant 0
eq
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
return
label IF_FALSE6
push local 0
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 2
push constant 1
add
pop local 2
goto IF_END7
label IF_FALSE7
push local 2
push constant 1
sub
pop local 2
label IF_END7
goto WHILE_EXP1
label WHILE_END1
push constant 0
not
return
label IF_FALSE4
push constant 0
return
function Piece.canMoveOrKillKnight 10
push argument 0
pop pointer 0
push argument 3
push argument 1
sub
pop local 0
push argument 4
push argument 2
sub
pop local 1
push local 1
push constant 2
eq
push local 0
push constant 1
eq
and
pop local 2
push local 1
push constant 2
eq
push local 0
push constant 1
neg
eq
and
pop local 3
push local 0
push constant 2
eq
push local 1
push constant 1
eq
and
pop local 9
push local 0
push constant 2
eq
push local 1
push constant 1
neg
eq
and
pop local 8
push local 1
push constant 2
neg
eq
push local 0
push constant 1
eq
and
pop local 7
push local 1
push constant 2
neg
eq
push local 0
push constant 1
neg
eq
and
pop local 6
push local 0
push constant 2
neg
eq
push local 1
push constant 1
neg
eq
and
pop local 5
push local 0
push constant 2
neg
eq
push local 1
push constant 1
eq
and
pop local 4
push local 2
push local 3
or
push local 9
push local 8
or
or
push local 7
push local 6
or
push local 5
push local 4
or
or
or
return
function Piece.canMoveOrKillBishop 6
push argument 0
pop pointer 0
push argument 3
push argument 1
sub
pop local 0
push argument 4
push argument 2
sub
pop local 1
push local 0
push constant 0
eq
not
push local 1
push constant 0
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 0
gt
push local 0
push constant 0
gt
and
push local 0
push local 1
eq
and
pop local 2
push local 1
push constant 0
lt
push local 0
push constant 0
gt
and
push local 1
neg
push local 0
eq
and
pop local 4
push local 1
push constant 0
gt
push local 0
push constant 0
lt
and
push local 1
push local 0
neg
eq
and
pop local 3
push local 1
push constant 0
lt
push local 0
push constant 0
lt
and
push local 0
push local 1
eq
and
pop local 5
push local 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push constant 1
push constant 1
push argument 5
call Piece.canMoveOrKillDiagonally 8
return
label IF_FALSE1
push local 4
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push constant 1
push constant 1
neg
push argument 5
call Piece.canMoveOrKillDiagonally 8
return
label IF_FALSE2
push local 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push constant 1
neg
push constant 1
push argument 5
call Piece.canMoveOrKillDiagonally 8
return
label IF_FALSE3
push local 5
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push constant 1
neg
push constant 1
neg
push argument 5
call Piece.canMoveOrKillDiagonally 8
return
label IF_FALSE4
label IF_FALSE0
push constant 0
return
function Piece.canMoveOrKillQueen 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKillBishop 6
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push argument 5
call Piece.canMoveOrKillRook 6
or
return
function Piece.canMoveOrKillKing 2
push argument 0
pop pointer 0
push argument 3
push argument 1
sub
pop local 0
push argument 4
push argument 2
sub
pop local 1
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
eq
push local 1
push constant 1
neg
eq
or
return
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
eq
push local 0
push constant 1
neg
eq
or
push local 1
push constant 0
eq
push local 1
push constant 1
eq
push local 1
push constant 1
neg
eq
or
or
and
return
label IF_END0
function Piece.canMoveOrKillDiagonally 4
push argument 0
pop pointer 0
push argument 1
push argument 5
add
pop local 0
push argument 2
push argument 6
add
pop local 1
label WHILE_EXP0
push local 0
push argument 3
eq
not
not
if-goto WHILE_END0
push local 0
push argument 7
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push argument 5
add
pop local 0
push local 1
push argument 6
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Piece.paint 0
push argument 0
pop pointer 0
push this 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call PieceType.isRook 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Piece.paintBlackRook 1
pop temp 0
label IF_FALSE1
push this 0
call PieceType.isKnight 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
call Piece.paintBlackKnight 1
pop temp 0
label IF_FALSE2
push this 0
call PieceType.isBishop 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
call Piece.paintBlackBishop 1
pop temp 0
label IF_FALSE3
push this 0
call PieceType.isQueen 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
call Piece.paintBlackQueen 1
pop temp 0
label IF_FALSE4
push this 0
call PieceType.isKing 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
call Piece.paintBlackKing 1
pop temp 0
label IF_FALSE5
push this 0
call PieceType.isPawn 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 1
call Piece.paintBlackPawn 1
pop temp 0
label IF_FALSE6
label IF_FALSE0
push this 1
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
call PieceType.isRook 1
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 1
call Piece.paintWhiteRook 1
pop temp 0
label IF_FALSE8
push this 0
call PieceType.isKnight 1
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push argument 1
call Piece.paintWhiteKnight 1
pop temp 0
label IF_FALSE9
push this 0
call PieceType.isBishop 1
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push argument 1
call Piece.paintWhiteBishop 1
pop temp 0
label IF_FALSE10
push this 0
call PieceType.isQueen 1
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push argument 1
call Piece.paintWhiteQueen 1
pop temp 0
label IF_FALSE11
push this 0
call PieceType.isKing 1
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push argument 1
call Piece.paintWhiteKing 1
pop temp 0
label IF_FALSE12
push this 0
call PieceType.isPawn 1
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push argument 1
call Piece.paintWhitePawn 1
pop temp 0
label IF_FALSE13
label IF_FALSE7
push constant 0
return
function Piece.paintBlackPawn 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 16380
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintWhitePawn 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1056
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 1056
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 576
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 7224
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 576
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 576
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 576
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1056
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 16380
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintBlackRook 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 31710
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 31710
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintWhiteRook 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 31710
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 19026
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 20082
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 16386
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 8196
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 8196
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 8196
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 16386
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 32767
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintWhiteKnight 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 1984
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 2080
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 4112
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 8200
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 16388
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 16578
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 16676
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 8472
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 4224
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 4160
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 4144
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 8200
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 16388
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 32766
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 32767
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintBlackKnight 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 1984
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 4064
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 8176
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 16376
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 32764
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 32572
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 16152
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8064
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 8128
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 8176
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 16376
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 32764
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintWhiteBishop 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 544
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 1040
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 1040
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 2056
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 2056
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 4100
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 4100
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 2056
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 2056
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1040
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 1040
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 16382
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintBlackBishop 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 992
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 2032
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 2032
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 4088
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 4088
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 4088
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 4088
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2032
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2032
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 16382
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintWhiteKing 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 14748
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 17826
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 31807
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 32383
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 32383
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 16770
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 16386
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 8196
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintBlackKing 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 14748
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 32190
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintWhiteQueen 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 7224
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 5160
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 7224
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 5065
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 22939
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 6745
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 30750
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 12300
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 4104
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1056
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 30750
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.paintBlackQueen 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 7224
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 7224
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 7224
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2064
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 5065
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 6553
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 6169
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Piece.dispose 0
push argument 0
pop pointer 0
push this 0
call PieceType.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
