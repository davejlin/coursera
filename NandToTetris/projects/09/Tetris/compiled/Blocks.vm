function Blocks.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 4
push constant 0
pop this 5
push pointer 0
call Blocks.isO 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 5
push constant 0
push this 4
call Block.new 3
pop this 1
push constant 4
push constant 1
push this 4
call Block.new 3
pop this 2
push constant 5
push constant 1
push this 4
call Block.new 3
pop this 3
label IF_FALSE0
push pointer 0
call Blocks.isS 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 5
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 6
push constant 0
push this 4
call Block.new 3
pop this 1
push constant 4
push constant 1
push this 4
call Block.new 3
pop this 2
push constant 5
push constant 1
push this 4
call Block.new 3
pop this 3
label IF_FALSE1
push pointer 0
call Blocks.isZ 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 5
push constant 0
push this 4
call Block.new 3
pop this 1
push constant 5
push constant 1
push this 4
call Block.new 3
pop this 2
push constant 6
push constant 1
push this 4
call Block.new 3
pop this 3
label IF_FALSE2
push pointer 0
call Blocks.isL 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 6
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 4
push constant 1
push this 4
call Block.new 3
pop this 1
push constant 5
push constant 1
push this 4
call Block.new 3
pop this 2
push constant 6
push constant 1
push this 4
call Block.new 3
pop this 3
label IF_FALSE3
push pointer 0
call Blocks.isJ 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 4
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 4
push constant 1
push this 4
call Block.new 3
pop this 1
push constant 5
push constant 1
push this 4
call Block.new 3
pop this 2
push constant 6
push constant 1
push this 4
call Block.new 3
pop this 3
label IF_FALSE4
push pointer 0
call Blocks.isT 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 5
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 4
push constant 1
push this 4
call Block.new 3
pop this 1
push constant 5
push constant 1
push this 4
call Block.new 3
pop this 2
push constant 6
push constant 1
push this 4
call Block.new 3
pop this 3
label IF_FALSE5
push pointer 0
call Blocks.isI 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 3
push constant 0
push this 4
call Block.new 3
pop this 0
push constant 4
push constant 0
push this 4
call Block.new 3
pop this 1
push constant 5
push constant 0
push this 4
call Block.new 3
pop this 2
push constant 6
push constant 0
push this 4
call Block.new 3
pop this 3
label IF_FALSE6
push pointer 0
return
function Blocks.fromComponents 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 4
push argument 5
pop this 5
push pointer 0
return
function Blocks.copy 4
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
pop local 0
push constant 1
push argument 0
add
pop pointer 1
push that 0
pop local 1
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop local 2
push constant 3
push argument 0
add
pop pointer 1
push that 0
pop local 3
push local 0
call Block.copy 1
pop this 0
push local 1
call Block.copy 1
pop this 1
push local 2
call Block.copy 1
pop this 2
push local 3
call Block.copy 1
pop this 3
push constant 4
push argument 0
add
pop pointer 1
push that 0
pop this 4
push constant 5
push argument 0
add
pop pointer 1
push that 0
pop this 5
push pointer 0
return
function Blocks.isO 0
push argument 0
pop pointer 0
push this 4
push constant 2
eq
return
function Blocks.isS 0
push argument 0
pop pointer 0
push this 4
push constant 3
eq
return
function Blocks.isZ 0
push argument 0
pop pointer 0
push this 4
push constant 4
eq
return
function Blocks.isL 0
push argument 0
pop pointer 0
push this 4
push constant 5
eq
return
function Blocks.isJ 0
push argument 0
pop pointer 0
push this 4
push constant 6
eq
return
function Blocks.isT 0
push argument 0
pop pointer 0
push this 4
push constant 7
eq
return
function Blocks.isI 0
push argument 0
pop pointer 0
push this 4
push constant 8
eq
return
function Blocks.getBottomBlocks 2
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 0
push pointer 0
push this 0
call Block.getX 1
push this 0
call Block.getY 1
push constant 1
add
call Blocks.containsPosition 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 0
add
push this 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push pointer 0
push this 1
call Block.getX 1
push this 1
call Block.getY 1
push constant 1
add
call Blocks.containsPosition 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 0
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE1
push pointer 0
push this 2
call Block.getX 1
push this 2
call Block.getY 1
push constant 1
add
call Blocks.containsPosition 3
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE2
push pointer 0
push this 3
call Block.getX 1
push this 3
call Block.getY 1
push constant 1
add
call Blocks.containsPosition 3
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push local 0
add
push this 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
push local 0
return
function Blocks.getLeftMostBlocks 2
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 0
push pointer 0
push this 0
call Block.getX 1
push constant 1
sub
push this 0
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 0
add
push this 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push pointer 0
push this 1
call Block.getX 1
push constant 1
sub
push this 1
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 0
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE1
push pointer 0
push this 2
call Block.getX 1
push constant 1
sub
push this 2
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE2
push pointer 0
push this 3
call Block.getX 1
push constant 1
sub
push this 3
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push local 0
add
push this 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
push local 0
return
function Blocks.getRightMostBlocks 2
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 0
push pointer 0
push this 0
call Block.getX 1
push constant 1
add
push this 0
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 0
add
push this 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push pointer 0
push this 1
call Block.getX 1
push constant 1
add
push this 1
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 0
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE1
push pointer 0
push this 2
call Block.getX 1
push constant 1
add
push this 2
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE2
push pointer 0
push this 3
call Block.getX 1
push constant 1
add
push this 3
call Block.getY 1
call Blocks.containsPosition 3
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push local 0
add
push this 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
push local 0
return
function Blocks.rotatedBlocks 3
push argument 0
pop pointer 0
push pointer 0
call Blocks.nextRotation 1
pop local 0
push this 1
call Block.getX 1
pop local 1
push this 1
call Block.getY 1
pop local 2
push pointer 0
call Blocks.isO 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 0
call Block.copy 1
push this 1
call Block.copy 1
push this 2
call Block.copy 1
push this 3
call Block.copy 1
call Blocks.rotated 5
return
label IF_FALSE0
push pointer 0
call Blocks.isS 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE2
push local 0
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE3
push local 0
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE4
push local 0
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push constant 0
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE5
label IF_FALSE1
push pointer 0
call Blocks.isZ 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push constant 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
push constant 0
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE7
push local 0
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push constant 2
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE8
push local 0
push constant 2
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE9
push local 0
push constant 3
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE10
label IF_FALSE6
push pointer 0
call Blocks.isL 1
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
push constant 0
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push pointer 0
push constant 2
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE12
push local 0
push constant 1
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE13
push local 0
push constant 2
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push pointer 0
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE14
push local 0
push constant 3
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push pointer 0
push constant 0
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE15
label IF_FALSE11
push pointer 0
call Blocks.isJ 1
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
push constant 0
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push pointer 0
push constant 0
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE17
push local 0
push constant 1
eq
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE18
push local 0
push constant 2
eq
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push pointer 0
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE19
push local 0
push constant 3
eq
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE20
label IF_FALSE16
push pointer 0
call Blocks.isT 1
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push local 0
push constant 0
eq
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE22
push local 0
push constant 1
eq
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE23
push local 0
push constant 2
eq
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
push pointer 0
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE24
push local 0
push constant 3
eq
if-goto IF_TRUE25
goto IF_FALSE25
label IF_TRUE25
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE25
label IF_FALSE21
push pointer 0
call Blocks.isI 1
if-goto IF_TRUE26
goto IF_FALSE26
label IF_TRUE26
push local 0
push constant 0
eq
if-goto IF_TRUE27
goto IF_FALSE27
label IF_TRUE27
push pointer 0
push constant 0
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 3
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE27
push local 0
push constant 1
eq
if-goto IF_TRUE28
goto IF_FALSE28
label IF_TRUE28
push pointer 0
push constant 2
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 3
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE28
push local 0
push constant 2
eq
if-goto IF_TRUE29
goto IF_FALSE29
label IF_TRUE29
push pointer 0
push constant 0
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 2
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 3
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE29
push local 0
push constant 3
eq
if-goto IF_TRUE30
goto IF_FALSE30
label IF_TRUE30
push pointer 0
push constant 1
push local 1
add
push constant 0
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 1
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 2
push local 2
add
push this 4
call Block.new 3
push constant 1
push local 1
add
push constant 3
push local 2
add
push this 4
call Block.new 3
call Blocks.rotated 5
return
label IF_FALSE30
label IF_FALSE26
push constant 46
call String.new 1
push constant 82
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 66
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 33
call String.appendChar 2
call Sys.error 1
pop temp 0
push constant 0
return
function Blocks.rotated 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
push this 4
push pointer 0
call Blocks.nextRotation 1
call Blocks.fromComponents 6
return
function Blocks.nextRotation 0
push argument 0
pop pointer 0
push this 5
push constant 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push this 5
push constant 1
add
return
label IF_END0
function Blocks.containsPosition 0
push argument 0
pop pointer 0
push this 0
call Block.getX 1
push argument 1
eq
push this 0
call Block.getY 1
and
push argument 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 1
call Block.getX 1
push argument 1
eq
push this 1
call Block.getY 1
and
push argument 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push this 2
call Block.getX 1
push argument 1
eq
push this 2
call Block.getY 1
and
push argument 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
push this 3
call Block.getX 1
push argument 1
eq
push this 3
call Block.getY 1
and
push argument 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
push constant 0
return
function Blocks.containsBlock 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Block.getX 1
push argument 1
call Block.getY 1
call Blocks.containsPosition 3
push this 4
push argument 1
call Block.getType 1
eq
and
return
function Blocks.incY 0
push argument 0
pop pointer 0
push this 0
call Block.incY 1
pop temp 0
push this 1
call Block.incY 1
pop temp 0
push this 2
call Block.incY 1
pop temp 0
push this 3
call Block.incY 1
pop temp 0
push constant 0
return
function Blocks.incX 0
push argument 0
pop pointer 0
push this 0
call Block.incX 1
pop temp 0
push this 1
call Block.incX 1
pop temp 0
push this 2
call Block.incX 1
pop temp 0
push this 3
call Block.incX 1
pop temp 0
push constant 0
return
function Blocks.decX 0
push argument 0
pop pointer 0
push this 0
call Block.decX 1
pop temp 0
push this 1
call Block.decX 1
pop temp 0
push this 2
call Block.decX 1
pop temp 0
push this 3
call Block.decX 1
pop temp 0
push constant 0
return
function Blocks.dispose 0
push argument 0
pop pointer 0
push this 0
call Memory.deAlloc 1
pop temp 0
push this 1
call Memory.deAlloc 1
pop temp 0
push this 2
call Memory.deAlloc 1
pop temp 0
push this 3
call Memory.deAlloc 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
