function Board.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 10
call Array.new 1
pop this 0
push constant 0
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 0
add
push constant 16
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.clear 1
pop temp 0
push constant 2
pop this 2
push this 2
call Blocks.new 1
pop this 1
push pointer 0
return
function Board.clear 3
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push constant 16
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 1
push constant 0
call BlockGraphics.draw 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.nextBlock 1
push argument 0
pop pointer 0
push this 1
call Blocks.dispose 1
pop temp 0
push this 2
call Blocks.new 1
pop this 1
push pointer 0
push this 1
call Board.putBlocks 2
pop local 0
push pointer 0
call Board.incrementNextBlockType 1
pop temp 0
push local 0
return
function Board.incrementNextBlockType 0
push argument 0
pop pointer 0
push this 2
push constant 8
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
add
pop this 2
goto IF_END0
label IF_FALSE0
push constant 2
pop this 2
label IF_END0
push constant 0
return
function Board.putBlocks 3
push argument 0
pop pointer 0
push constant 0
not
pop local 2
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop pointer 1
push that 0
pop local 1
push local 2
push pointer 0
push local 1
call Block.getX 1
push local 1
call Block.getY 1
push local 1
call Block.getType 1
call Board.putBlock 4
and
pop local 2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Board.clearBlocks 2
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop pointer 1
push that 0
pop local 1
push pointer 0
push local 1
call Block.getX 1
push local 1
call Block.getY 1
push constant 0
call Board.putBlock 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.putBlock 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push argument 2
push argument 3
call BlockGraphics.draw 3
pop temp 0
push local 1
push constant 0
eq
return
function Board.getBlock 1
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
label IF_FALSE0
push argument 1
push constant 9
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
return
label IF_FALSE1
push argument 2
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
return
label IF_FALSE2
push argument 2
push constant 15
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
neg
return
label IF_FALSE3
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
return
function Board.moveCurrentDown 0
push argument 0
pop pointer 0
push pointer 0
call Board.canMoveDown 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Board.moveDown 1
pop temp 0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Board.canMoveDown 4
push argument 0
pop pointer 0
push this 1
call Blocks.getBottomBlocks 1
pop local 0
label WHILE_EXP0
push local 2
push constant 4
lt
not
if-goto WHILE_END0
push local 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
call Block.getX 1
push local 1
call Block.getY 1
push constant 1
add
call Board.getBlock 3
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Board.moveDown 0
push argument 0
pop pointer 0
push pointer 0
push this 1
call Board.clearBlocks 2
pop temp 0
push this 1
call Blocks.incY 1
pop temp 0
push pointer 0
push this 1
call Board.putBlocks 2
pop temp 0
push constant 0
return
function Board.moveCurrentLeft 0
push argument 0
pop pointer 0
push pointer 0
call Board.canMoveLeft 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Board.moveLeft 1
pop temp 0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Board.canMoveLeft 4
push argument 0
pop pointer 0
push this 1
call Blocks.getLeftMostBlocks 1
pop local 0
label WHILE_EXP0
push local 2
push constant 4
lt
not
if-goto WHILE_END0
push local 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
call Block.getX 1
push constant 1
sub
push local 1
call Block.getY 1
call Board.getBlock 3
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Board.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
push this 1
call Board.clearBlocks 2
pop temp 0
push this 1
call Blocks.decX 1
pop temp 0
push pointer 0
push this 1
call Board.putBlocks 2
pop temp 0
push constant 0
return
function Board.moveCurrentRight 0
push argument 0
pop pointer 0
push pointer 0
call Board.canMoveRight 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Board.moveRight 1
pop temp 0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Board.canMoveRight 4
push argument 0
pop pointer 0
push this 1
call Blocks.getRightMostBlocks 1
pop local 0
label WHILE_EXP0
push local 2
push constant 4
lt
not
if-goto WHILE_END0
push local 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
call Block.getX 1
push constant 1
add
push local 1
call Block.getY 1
call Board.getBlock 3
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Board.moveRight 0
push argument 0
pop pointer 0
push pointer 0
push this 1
call Board.clearBlocks 2
pop temp 0
push this 1
call Blocks.incX 1
pop temp 0
push pointer 0
push this 1
call Board.putBlocks 2
pop temp 0
push constant 0
return
function Board.rotateCurrent 1
push argument 0
pop pointer 0
push this 1
call Blocks.rotatedBlocks 1
pop local 0
push pointer 0
push local 0
call Board.allFree 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 1
call Board.clearBlocks 2
pop temp 0
push this 1
call Blocks.dispose 1
pop temp 0
push local 0
call Blocks.copy 1
pop this 1
push pointer 0
push this 1
call Board.putBlocks 2
pop temp 0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Board.allFree 4
push argument 0
pop pointer 0
push this 1
push constant 0
push argument 1
add
pop pointer 1
push that 0
call Blocks.containsBlock 2
push pointer 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
call Board.isFree 2
or
pop local 0
push this 1
push constant 1
push argument 1
add
pop pointer 1
push that 0
call Blocks.containsBlock 2
push pointer 0
push constant 1
push argument 1
add
pop pointer 1
push that 0
call Board.isFree 2
or
pop local 1
push this 1
push constant 2
push argument 1
add
pop pointer 1
push that 0
call Blocks.containsBlock 2
push pointer 0
push constant 2
push argument 1
add
pop pointer 1
push that 0
call Board.isFree 2
or
pop local 2
push this 1
push constant 3
push argument 1
add
pop pointer 1
push that 0
call Blocks.containsBlock 2
push pointer 0
push constant 3
push argument 1
add
pop pointer 1
push that 0
call Board.isFree 2
or
pop local 3
push local 0
push local 1
and
push local 2
and
push local 3
and
return
function Board.isFree 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Block.getX 1
push argument 1
call Block.getY 1
call Board.getBlock 3
push constant 0
eq
return
function Board.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Blocks.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
