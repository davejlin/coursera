class Bounce {
   field Ball ball;
   field Array balls;
   field int nBalls;

   constructor Bounce new() {
      var int i;
      let nBalls = 10;
      let balls = Array.new(nBalls);

      let i = 0;
      while (i < nBalls) {
         let balls[i] = Ball.new();
         let i = i + 1;
      }

      return this;
   }

   method void dispose() {
      do ball.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void moveBalls() {
      var int i;
      var Ball ball;
      let i = 0;
      while (i < nBalls) {
         let ball = balls[i];
         do ball.move();
         let i = i + 1;
      }
      return;
   }

   method void bounceBalls() {
      var int i, j;
      var boolean touched;
      var Ball ball, otherBall;
      let i = 0;
      while (i < nBalls) {
         let ball = balls[i];
         
         let j = 0;
         let touched = false;
         while (j < nBalls) {
            if (~(i = j)) {
               let otherBall = balls[j];
               let touched = ball.didTouch(otherBall);
            }

            let j = j + 1;
            if (touched) {
               let j = nBalls;
            }
         }
         
         let i = i + 1;
      }
      return;
   }

   method void run() {      
      while (true) {
         do moveBalls();
         do bounceBalls();
         do Sys.wait(0);
     }
     return;
   }
}
