function Ball.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push constant 510
pop this 5
push constant 254
pop this 6
push this 5
push constant 2
call Math.divide 2
pop this 7
push this 6
push constant 2
call Math.divide 2
pop this 8
push constant 1
push constant 15
call Random.between 2
pop this 2
push this 2
push this 5
push this 2
sub
call Random.between 2
pop this 0
push this 2
push this 6
push this 2
sub
call Random.between 2
pop this 1
push pointer 0
call Ball.setNewDirection 1
pop temp 0
push constant 0
pop this 4
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.setNewDirection 0
push argument 0
pop pointer 0
push constant 0
push constant 8
call Random.between 2
pop this 3
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.setNewDirection 1
pop temp 0
label IF_FALSE0
push this 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Ball.moveUp 1
pop this 4
push constant 0
return
label IF_FALSE1
push this 3
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Ball.moveDown 1
pop this 4
push constant 0
return
label IF_FALSE2
push this 3
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Ball.moveLeft 1
pop this 4
push constant 0
return
label IF_FALSE3
push this 3
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Ball.moveRight 1
pop this 4
push constant 0
return
label IF_FALSE4
push this 3
push constant 4
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
call Ball.moveUpRight 1
pop this 4
push constant 0
return
label IF_FALSE5
push this 3
push constant 5
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
call Ball.moveUpLeft 1
pop this 4
push constant 0
return
label IF_FALSE6
push this 3
push constant 6
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Ball.moveDownRight 1
pop this 4
push constant 0
return
label IF_FALSE7
push this 3
push constant 7
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
call Ball.moveDownLeft 1
pop this 4
push constant 0
return
label IF_FALSE8
push constant 0
return
function Ball.setOppositeDirection 0
push argument 0
pop pointer 0
push this 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 3
push constant 0
return
label IF_FALSE0
push this 3
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 3
push constant 0
return
label IF_FALSE1
push this 3
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
pop this 3
push constant 0
return
label IF_FALSE2
push this 3
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
pop this 3
push constant 0
return
label IF_FALSE3
push this 3
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 7
pop this 3
push constant 0
return
label IF_FALSE4
push this 3
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 6
pop this 3
push constant 0
return
label IF_FALSE5
push this 3
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 5
pop this 3
push constant 0
return
label IF_FALSE6
push this 3
push constant 7
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 4
pop this 3
push constant 0
return
label IF_FALSE7
push constant 0
return
function Ball.didTouch 6
push argument 0
pop pointer 0
push this 2
push argument 1
call Ball.getRadius 1
add
pop local 5
push this 0
push argument 1
call Ball.getX 1
sub
call Math.abs 1
pop local 3
push local 3
push local 5
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
push argument 1
call Ball.getY 1
sub
call Math.abs 1
pop local 4
push local 4
push local 5
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 0
not
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.moveUp 0
push argument 0
pop pointer 0
push this 1
push this 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push this 6
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveLeft 0
push argument 0
pop pointer 0
push this 0
push this 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push this 5
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveUpRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push this 5
lt
push this 1
push this 2
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveUpLeft 0
push argument 0
pop pointer 0
push this 0
push this 2
gt
push this 1
push this 2
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveDownRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push this 5
lt
push this 1
push this 2
add
push this 6
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.moveDownLeft 0
push argument 0
pop pointer 0
push this 0
push this 2
gt
push this 1
push this 2
add
push this 6
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Ball.getX 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getRadius 0
push argument 0
pop pointer 0
push this 2
return
